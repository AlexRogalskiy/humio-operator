apiVersion: core.humio.com/v1alpha1
kind: HumioCluster
metadata:
  name: example-humiocluster
  namespace: default
spec:
  targetReplicationFactor: 2
  storagePartitionsCount: 24
  digestPartitionsCount: 24
  hostname: my-cluster.example.com
  esHostname: my-cluster-es.example.com
  tls:
    enabled: true
  ingress:
    enabled: false

  serviceRoles: # option A
    stateful: {} # We can use an empty struct initially if we want to start with pod-creation before moving on to per-service settings similar to this:
      #serviceRoles:
      #  stateful:
      #    type: LoadBalancer                     # This could map directly to field "type" on the Kubernetes Service object and replace HumioCluster.Spec.HumioServiceType
      #  labels:                                  # This could map directly to field "labels" on the Kubernetes Service object and replace HumioCluster.Spec.HumioServiceLabels
      #    "mirror.linkerd.io/exported": "true"
      #  annotations:                             # This could map directly to field "annotations" on the Kubernetes Service object and replace HumioCluster.Spec.HumioServiceAnnotations
      #    "service.beta.kubernetes.io/aws-load-balancer-type": "nlb"
    ingest: {}

  # Alternatively it could be something like this, but we would need to build in checks for uniqueness of the name:
  #serviceRoles: # option B
  #- name: stateful
  #- name: ingest

  nodePools:
  - name: stateful
    attachedServiceRoles: ["stateful"]
    image: "humio/humio-core:1.18.1"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: humio_node_type
              operator: In
              values:
              - core
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - humio
          topologyKey: kubernetes.io/hostname
    dataVolumeSource:
      hostPath:
        path: "/mnt/disks/vol1"
        type: "Directory"
    environmentVariables:
    - name: S3_STORAGE_BUCKET
      value: "my-cluster-storage"
    - name: S3_STORAGE_REGION
      value: "us-west-2"
    - name: S3_STORAGE_ENCRYPTION_KEY
      value: "my-encryption-key"
    - name: USING_EPHEMERAL_DISKS
      value: "true"
    - name: S3_STORAGE_PREFERRED_COPY_SOURCE
      value: "true"
    - name: HUMIO_JVM_ARGS
      value: -Xss2m -Xms2g -Xmx26g -server -XX:MaxDirectMemorySize=26g -XX:+UseParallelOldGC -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=dontinline,com/humio/util/HotspotUtilsJ.dontInline -Xlog:gc+jni=debug:stdout -Dakka.log-config-on-start=on -Xlog:gc*:stdout:time,tags
    - name: "ZOOKEEPER_URL"
      value: "z-2-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:2181,z-3-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:2181,z-1-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:2181"
    - name: "KAFKA_SERVERS"
      value: "b-2-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:9092,b-1-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:9092,b-3-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:9092"
  - name: ingest
    attachedServiceRoles: ["ingest"]
    image: "humio/humio-core:1.18.1"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: humio_node_type
              operator: In
              values:
              - core
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - humio
          topologyKey: kubernetes.io/hostname
    dataVolumeSource:
      hostPath:
        path: "/mnt/disks/vol1"
        type: "Directory"
    environmentVariables:
      - name: S3_STORAGE_BUCKET
        value: "my-cluster-storage"
      - name: S3_STORAGE_REGION
        value: "us-west-2"
      - name: S3_STORAGE_ENCRYPTION_KEY
        value: "my-encryption-key"
      - name: USING_EPHEMERAL_DISKS
        value: "true"
      - name: S3_STORAGE_PREFERRED_COPY_SOURCE
        value: "true"
      - name: HUMIO_JVM_ARGS
        value: -Xss2m -Xms2g -Xmx26g -server -XX:MaxDirectMemorySize=26g -XX:+UseParallelOldGC -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=dontinline,com/humio/util/HotspotUtilsJ.dontInline -Xlog:gc+jni=debug:stdout -Dakka.log-config-on-start=on -Xlog:gc*:stdout:time,tags
      - name: "ZOOKEEPER_URL"
        value: "z-2-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:2181,z-3-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:2181,z-1-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:2181"
      - name: "KAFKA_SERVERS"
        value: "b-2-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:9092,b-1-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:9092,b-3-my-zookeeper.c4.kafka.us-west-2.amazonaws.com:9092"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |2-

      more_set_headers "Expect-CT: max-age=604800, enforce";
      more_set_headers "Referrer-Policy: no-referrer";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    nginx.ingress.kubernetes.io/cors-allow-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: GET, PUT, POST, DELETE, PATCH, OPTIONS
    nginx.ingress.kubernetes.io/cors-allow-origin: https://my-cluster-es.example.com
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "90"
    nginx.ingress.kubernetes.io/proxy-ssl-name: example-humiocluster.default
    nginx.ingress.kubernetes.io/proxy-ssl-secret: logging/example-humiocluster
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: example-humiocluster.logging
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    nginx.ingress.kubernetes.io/upstream-vhost: my-cluster-es.example.com
    use-http01-solver: "true"
  labels:
    app.kubernetes.io/instance: example-humiocluster
    app.kubernetes.io/managed-by: humio-operator
    app.kubernetes.io/name: humio
  name: example-humiocluster-es-ingest
  namespace: default
spec:
  rules:
  - host: my-cluster-es.example.com
    http:
      paths:
      - backend:
          serviceName: example-humiocluster-ingest
          servicePort: 9200
        path: /
  tls:
  - hosts:
    - my-cluster-es.example.com
    secretName: example-humiocluster-es-certificate
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |2-

      more_set_headers "Expect-CT: max-age=604800, enforce";
      more_set_headers "Referrer-Policy: no-referrer";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    nginx.ingress.kubernetes.io/cors-allow-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: GET, PUT, POST, DELETE, PATCH, OPTIONS
    nginx.ingress.kubernetes.io/cors-allow-origin: https://my-cluster.example.com
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "25"
    nginx.ingress.kubernetes.io/proxy-ssl-name: example-humiocluster.default
    nginx.ingress.kubernetes.io/proxy-ssl-secret: default/example-humiocluster
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: example-humiocluster.default
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    nginx.ingress.kubernetes.io/upstream-vhost: my-cluster.example.com
    use-http01-solver: "true"
  labels:
    app.kubernetes.io/instance: example-humiocluster
    app.kubernetes.io/managed-by: humio-operator
    app.kubernetes.io/name: humio
  name: example-humiocluster-general
  namespace: default
spec:
  rules:
  - host: my-cluster.example.com
    http:
      paths:
      - backend:
          serviceName: example-humiocluster-stateful
          servicePort: 8080
        path: /
  tls:
  - hosts:
    - my-cluster.example.com
    secretName: example-humiocluster-certificate
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |2-

      more_set_headers "Expect-CT: max-age=604800, enforce";
      more_set_headers "Referrer-Policy: no-referrer";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    nginx.ingress.kubernetes.io/cors-allow-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: GET, PUT, POST, DELETE, PATCH, OPTIONS
    nginx.ingress.kubernetes.io/cors-allow-origin: https://my-cluster.example.com
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "90"
    nginx.ingress.kubernetes.io/proxy-ssl-name: example-humiocluster.default
    nginx.ingress.kubernetes.io/proxy-ssl-secret: default/example-humiocluster
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: example-humiocluster.default
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    nginx.ingress.kubernetes.io/upstream-vhost: my-cluster.example.com
    nginx.ingress.kubernetes.io/use-regex: "true"
    use-http01-solver: "true"
  labels:
    app.kubernetes.io/instance: example-humiocluster
    app.kubernetes.io/managed-by: humio-operator
    app.kubernetes.io/name: humio
  name: example-humiocluster-ingest
  namespace: default
spec:
  rules:
  - host: my-cluster.example.com
    http:
      paths:
      - backend:
          serviceName: example-humiocluster-ingest
          servicePort: 8080
        path: /api/v./(dataspaces|repositories)/[^/]+/(ingest|logplex)
      - backend:
          serviceName: example-humiocluster-ingest
          servicePort: 8080
        path: /api/v1/ingest
      - backend:
          serviceName: example-humiocluster-ingest
          servicePort: 8080
        path: /services/collector
      - backend:
          serviceName: example-humiocluster-ingest
          servicePort: 8080
        path: /_bulk
  tls:
  - hosts:
    - my-cluster.example.com
    secretName: example-humiocluster-certificate
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |2-

      more_set_headers "Expect-CT: max-age=604800, enforce";
      more_set_headers "Referrer-Policy: no-referrer";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    nginx.ingress.kubernetes.io/cors-allow-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: GET, PUT, POST, DELETE, PATCH, OPTIONS
    nginx.ingress.kubernetes.io/cors-allow-origin: https://my-cluster.example.com
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-read-timeout: 4h
    nginx.ingress.kubernetes.io/proxy-ssl-name: example-humiocluster.default
    nginx.ingress.kubernetes.io/proxy-ssl-secret: default/example-humiocluster
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: example-humiocluster.default
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    nginx.ingress.kubernetes.io/upstream-vhost: my-cluster.example.com
    nginx.ingress.kubernetes.io/use-regex: "true"
    use-http01-solver: "true"
  labels:
    app.kubernetes.io/instance: example-humiocluster
    app.kubernetes.io/managed-by: humio-operator
    app.kubernetes.io/name: humio
  name: example-humiocluster-streaming-query
  namespace: default
spec:
  rules:
  - host: my-cluster.example.com
    http:
      paths:
      - backend:
          serviceName: example-humiocluster-stateful
          servicePort: 8080
        path: /api/v./(dataspaces|repositories)/[^/]+/query$
  tls:
  - hosts:
    - my-cluster.example.com
    secretName: example-humiocluster-certificate
